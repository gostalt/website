{"componentChunkName":"component---src-templates-doc-js","path":"/getting-started/routing","result":{"data":{"markdownRemark":{"html":"<p>Gostalt uses an expressive syntax to make registering new routes\nreally easy. Two sets of route groups are set up for you with\na fresh install: <code>web</code> and <code>api</code>.</p>\n<h2 id=\"route-groups\"><a href=\"#route-groups\" aria-label=\"route groups permalink\" class=\"heading-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Route Groups</h2>\n<p>Route groups allow you to separate different sections of your app.\nYou can apply prefixes and middleware to different route groups.</p>\n<p>Route groups live in the <code>routes</code> folder of your Gostalt app. To\ncreate a new route group, create a new file in this directory.\nFor example, <code>routes/admin.go</code>.</p>\n<p>In this file, you should create a new variable of type <code>route.Collection</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> routes\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"github.com/gostalt/framework/route\"</span>\n\n<span class=\"token keyword\">var</span> Admin <span class=\"token operator\">=</span> route<span class=\"token punctuation\">.</span><span class=\"token function\">Collection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"route-group-prefixes\"><a href=\"#route-group-prefixes\" aria-label=\"route group prefixes permalink\" class=\"heading-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Route Group Prefixes</h3>\n<p>The <code>Prefix</code> method can be chained onto a Collection to prefix\neach route in the collection with a given string. For example,\nto prefix all route URIs with \"admin\":</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">var</span> Admin <span class=\"token operator\">=</span> route<span class=\"token punctuation\">.</span><span class=\"token function\">Collection</span><span class=\"token punctuation\">(</span>\n    route<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"users\"</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span> <span class=\"token comment\">// would resolve to `admin/users`.</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Prefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"route-group-middleware\"><a href=\"#route-group-middleware\" aria-label=\"route group middleware permalink\" class=\"heading-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Route Group Middleware</h3>\n<p>To add middleware to each of the routes in a Group, you can chain\nthe <code>Middleware</code> method onto a Collection. The middleware are\nexecuted in the order they are defined:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">var</span> API <span class=\"token operator\">=</span> route<span class=\"token punctuation\">.</span><span class=\"token function\">Collection</span><span class=\"token punctuation\">(</span>\n\troute<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/status\"</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Prefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"api\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Middleware</span><span class=\"token punctuation\">(</span>mw<span class=\"token punctuation\">.</span>AddJSONContentTypeHeader<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"routes\"><a href=\"#routes\" aria-label=\"routes permalink\" class=\"heading-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Routes</h3>\n<p>Inside this <code>route.Collection</code> function call, you should add all\nthe routes you wish to belong to this collection:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> routes\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"gostalt/app/http/handler/admin\"</span>\n\t<span class=\"token string\">\"net/http\"</span>\n\n\t<span class=\"token string\">\"github.com/gostalt/framework/route\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> Admin <span class=\"token operator\">=</span> route<span class=\"token punctuation\">.</span><span class=\"token function\">Collection</span><span class=\"token punctuation\">(</span>\n\troute<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin/users\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">HandlerFunc</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>GetUsers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\troute<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"admin/cards\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">HandlerFunc</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">.</span>GetCards<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>See <a href=\"/handlers\">handlers</a> for information on how to create handlers.</p>\n<p>You can use <code>route.Get</code>, <code>route.Post</code>, <code>route.Put</code>, <code>route.Patch</code>\nand <code>route.Delete</code> to register routes. These will only allow requests\nfrom their corresponding HTTP verbs.</p>\n<p>The second parameter of a route definition is the handler. This can\nbe an <code>http.Handler</code> or an object that implements Go's native\n<code>fmt.Stringer</code> interface (in other words, the struct has a <code>String</code>\nmethod that returns a string).</p>\n<blockquote>\n<p>To use a function, you should cast it to an <code>http.HandlerFunc</code>\nas seen in the example above.</p>\n</blockquote>\n<h4 id=\"route-parameters\"><a href=\"#route-parameters\" aria-label=\"route parameters permalink\" class=\"heading-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Route Parameters</h4>\n<p>You can use <code>{param}</code> notation to add parameters to a route:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">route<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"greet/{name}\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">HandlerFunc</span><span class=\"token punctuation\">(</span>GreetingHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>These parameters will be available inside the request's <code>Form</code>\nfield inside the handler:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">GreetingHandler</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    name <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span>Form<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":name\"</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">`{\"greeting\": \"Hello, %s! From Gostalt.\"}`</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Note:</strong> route parameters are prefixed with <code>:</code> to prevent them\nfrom overwriting existing values in the request.</p>\n<blockquote>\n<p>This functionality is handled by the <code>AddURIParametersToRequest</code>\nmiddleware. If you're interested in this functionality in your\nown route groups, ensure you add it to your route Collection.</p>\n</blockquote>\n<h4 id=\"redirect-routes\"><a href=\"#redirect-routes\" aria-label=\"redirect routes permalink\" class=\"heading-anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redirect Routes</h4>\n<p>Rather than create an entire Handler to manage redirecting from\none page to another, Gostalt includes a <code>Redirect</code> method to make\nthis process a cinch:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">route<span class=\"token punctuation\">.</span><span class=\"token function\">Redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/old\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/new\"</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"path":"/getting-started/routing","title":"Routing"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}